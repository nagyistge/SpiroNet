{
  "name": "SpiroNet",
  "tagline": "The .NET C# port of libspiro - conversion between spiro control points and bezier's",
  "body": "# SpiroNet\r\n\r\n[![Gitter](https://badges.gitter.im/wieslawsoltes/SpiroNet.svg)](https://gitter.im/wieslawsoltes/SpiroNet?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\r\n[![Build status](https://ci.appveyor.com/api/projects/status/vq16ocwrjj95ak6t?svg=true)](https://ci.appveyor.com/project/wieslawsoltes/spironet)\r\n[![Build Status](https://travis-ci.org/wieslawsoltes/SpiroNet.svg?branch=master)](https://travis-ci.org/wieslawsoltes/SpiroNet)\r\n\r\nThe .NET C# port of [libspiro](https://github.com/fontforge/libspiro) - conversion between spiro control points and bezier's\r\n\r\n## Introduction\r\n\r\nFor libspiro introduction please see [libspiro project page](https://github.com/fontforge/libspiro). There is also GUI version using libspiro written in C#/WPF for Windows.\r\n\r\n## Usage\r\n\r\nProvided examples create  geometric paths as output using [Path Markup Syntax](https://msdn.microsoft.com/en-us/library/cc189041(v=vs.95).aspx) for WPF/Silverlight and [Path Data](http://www.w3.org/TR/SVG/paths.html#PathData) for SVG.\r\n\r\n```C#\r\nvar points = new SpiroControlPoint[4];\r\npoints[0].X = -100; points[0].Y = 0; points[0].Type = SpiroPointType.G4;\r\npoints[1].X = 0; points[1].Y = 100; points[1].Type = SpiroPointType.G4;\r\npoints[2].X = 100; points[2].Y = 0; points[2].Type = SpiroPointType.G4;\r\npoints[3].X = 0; points[3].Y = -100; points[3].Type = SpiroPointType.G4;\r\n\r\nvar bc = new PathBezierContext();\r\nvar success = Spiro.SpiroCPsToBezier0(points, 4, true, bc);\r\n\r\nConsole.WriteLine(bc);\r\nConsole.WriteLine(\"Success: {0} \", success);\r\n```\r\n\r\n```C#\r\nvar points = new SpiroControlPoint[5];\r\npoints[0].X = -100; points[0].Y = 0; points[0].Type = SpiroPointType.G4;\r\npoints[1].X = 0; points[1].Y = 100; points[1].Type = SpiroPointType.G4;\r\npoints[2].X = 100; points[2].Y = 0; points[2].Type = SpiroPointType.G4;\r\npoints[3].X = 0; points[3].Y = -100; points[3].Type = SpiroPointType.G4;\r\npoints[4].X = 0; points[4].Y = 0; points[4].Type = SpiroPointType.End;\r\n\r\nvar bc = new PathBezierContext();\r\nvar success = Spiro.TaggedSpiroCPsToBezier0(points, bc);\r\n\r\nConsole.WriteLine(bc);\r\nConsole.WriteLine(\"Success: {0} \", success);\r\n```\r\n\r\n```C#\r\nvar points = new SpiroControlPoint[4];\r\npoints[0].X = -100; points[0].Y = 0; points[0].Type = SpiroPointType.OpenContour;\r\npoints[1].X = 0; points[1].Y = 100; points[1].Type = SpiroPointType.G4;\r\npoints[2].X = 100; points[2].Y = 0; points[2].Type = SpiroPointType.G4;\r\npoints[3].X = 0; points[3].Y = -100; points[3].Type = SpiroPointType.EndOpenContour;\r\n\r\nvar bc = new PathBezierContext();\r\nvar success = Spiro.TaggedSpiroCPsToBezier0(points, bc);\r\n\r\nConsole.WriteLine(bc);\r\nConsole.WriteLine(\"Success: {0} \", success);\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}